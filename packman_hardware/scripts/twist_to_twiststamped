#!/usr/bin/env python3
import rclpy
from rclpy.node import Node

from std_msgs.msg import String
from geometry_msgs.msg import Twist, TwistStamped


class TwistToTwistStamped(Node):
    def __init__(self):
        super().__init__('twist_to_twiststamped')
        self.subscription = self.create_subscription(Twist, 'input', self.callback, 1)
        self.publisher_ = self.create_publisher(TwistStamped, 'output', 1)

    def callback(self, msg):
        self.publisher_.publish(TwistStamped(twist=msg))


def main(args=None):
    rclpy.init(args=args)
    minimal_publisher = TwistToTwistStamped()
    rclpy.spin(minimal_publisher)
    minimal_publisher.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
